[{"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\index.js":"1","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\App.js":"2","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\reportWebVitals.js":"3","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Line.js":"4","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\header.js":"5","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Header.js":"6","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Footer.js":"7","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Navigation.js":"8","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Home.js":"9","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Donut.js":"10","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Score.js":"11","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Courbi.js":"12","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Cdonut.js":"13","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\CScore.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":1046,"mtime":1611150503888,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4605,"mtime":1611586350411,"results":"19","hashOfConfig":"16"},{"size":721,"mtime":1609941319400,"results":"20","hashOfConfig":"16"},{"size":1285,"mtime":1611573636212,"results":"21","hashOfConfig":"16"},{"size":745,"mtime":1611755289709,"results":"22","hashOfConfig":"16"},{"size":739,"mtime":1610980075996,"results":"23","hashOfConfig":"16"},{"size":4025,"mtime":1611310407649,"results":"24","hashOfConfig":"16"},{"size":6465,"mtime":1611701135682,"results":"25","hashOfConfig":"16"},{"size":6836,"mtime":1611756278876,"results":"26","hashOfConfig":"16"},{"size":4320,"mtime":1611151762659,"results":"27","hashOfConfig":"16"},{"size":1563,"mtime":1611317856714,"results":"28","hashOfConfig":"16"},{"size":2910,"mtime":1611586875755,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"163a0na",{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\index.js",[],["69","70"],"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\App.js",["71","72","73","74"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport Line from './Line.js';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport { render } from 'react-dom';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './Home';\nimport Donut from './Donut';\nimport Score from './Score';\nimport Solo_courbes from'./Courbi'\nimport Navigation from './Navigation';\nclass App extends React.Component  {\n  \n\n     \n    render() { \n        \n      return ( \n         \n        <div>\n          \n          <BrowserRouter>\n        <div>\n          <Header />\n            <Switch>\n             <Route path=\"/home\" component={Home}/>\n          \n             <Route path=\"/courbes-simples\" component={Solo_courbes}/>\n          \n             <Route path=\"/donut\" component={Donut}/>\n             <Route path=\"/score\" component={Score}/>\n             \n           </Switch>\n        </div> \n      </BrowserRouter>\n          <Footer></Footer>\n</div>\n      ); \n    } \n}\n\nexport default App;\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\reportWebVitals.js",[],"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Line.js",["75"],"import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as zoom from 'chartjs-plugin-zoom';\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nclass line extends React.Component{\r\n    state = {\r\n        lab:[],\r\n        data : {\r\n  labels: ['9:15', '9:20', '9:30', '9:35', '9:40', '9:45', '9:50','9:55', '10:00', '10:05', '10:10', '10:15', '10:20', '10:25'],\r\n  datasets: [\r\n    {\r\n      label: ' X Tremor',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [65, 59, 80, 81, 56, 55, 40,65, 59, 80, 81, 56, 55, 40]\r\n    },\r\n      {\r\n      label: 'Y Tremor',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,0,192,0.4)',\r\n      borderColor: 'rgba(75,0,192,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,0,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,0,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,0,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [80, 70, 40, 31, 60, 50, 59, 70, 35, 40, 80, 56, 60, 70]\r\n    },{\r\n      label: 'Z Tremor',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,0,0.4)',\r\n      borderColor: 'rgba(75,192,0,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,192,0,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,0,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,0,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [30, 50, 88, 83, 40, 30, 45,50, 53, 88, 80, 70, 55, 31]\r\n    }\r\n  ]\r\n},options: {\r\n        maintainAspectRatio: true,\r\n        responsive: true,\r\n        legend: {\r\n            position: 'top'\r\n        },scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:false\r\n                }\r\n            }]\r\n        },\r\n        plugins: {\r\n            zoom: {\r\n                // Container for pan options\r\n                pan: {\r\n                    // Boolean to enable panning\r\n                    enabled: true,\r\n\r\n                    // Panning directions. Remove the appropriate direction to disable \r\n                    // Eg. 'y' would only allow panning in the y direction\r\n                    mode: 'x',\r\n                    speed: 10,\r\n                threshold: 10\r\n                },\r\n\r\n                // Container for zoom options\r\n                zoom: {\r\n                    // Boolean to enable zooming\r\n                    enabled: true,\r\n\r\n                    // Zooming directions. Remove the appropriate direction to disable \r\n                    // Eg. 'y' would only allow zooming in the y direction\r\n                    drag: false,\r\n        mode: \"x\",\r\n                }\r\n            }\r\n        }\r\n    }}\r\n  \r\n//https://codepen.io/jledentu/pen/NWWZryv -> Pour travailler le zoom and pan\r\n    componentDidMount() {\r\n\r\n    \r\n\r\n  }\r\n\r\nactu = () =>{\r\n    let xdata = this.props.datax;\r\n    let ydata = this.props.datay;\r\n    let zdata = this.props.dataz;\r\n    let label = this.props.labo;\r\n    let data = this.state.data;\r\n    \r\n    \r\n    data.datasets.[0].data=xdata;\r\n    data.datasets.[1].data=ydata;\r\n    data.datasets.[2].data=zdata;\r\n    \r\n    \r\n    data.labels=label;\r\n    this.setState({data})\r\n    \r\n}\r\n    \r\n    render(){\r\n        \r\n        return(\r\n        \r\n        <div>\r\n        <div style={{padding:'0.5em'}}>\r\n            <button  onClick={this.actu}>Afficher les données</button>      \r\n        </div>\r\n            \r\n      <div style={{width:'85%',height:'85%'}}>\r\n            \r\n        <Line  data={this.state.data} options={this.state.options}/>\r\n    </div>\r\n        \r\n    </div>\r\n        \r\n        \r\n        \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default line;","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\header.js",[],"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Header.js",["76","77"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App.js'\r\nimport {NavLink} from 'react-router-dom';\r\nclass Header extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n        <div>\r\n      <nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item active h-elem\">\r\n        \r\n          <a class=\"nav-link\" href=\"/home\" to=\"/home\" style={{ pointer: 'none', color: 'inherit', textDecoration: 'inherit'}}>Accueil</a>\r\n        </li>\r\n        <li class=\"nav-item h-elem\">\r\n          <a class=\"nav-link\" href=\"/courbes-simples\" to=\"/courbes-simples\" style={{ color: 'inherit', textDecoration: 'inherit'}}>Courbes simples</a>\r\n        </li>\r\n        <li class=\"nav-item h-elem\">\r\n            <a class=\"nav-link\" href=\"/donut\" to=\"/donut\" style={{ color: 'inherit', textDecoration: 'inherit'}}>Donut</a>\r\n          \r\n        </li>\r\n        <li class=\"nav-item h-elem\">\r\n            <a class=\"nav-link\" href=\"/score\" to=\"/score\" style={{ color: 'inherit', textDecoration: 'inherit'}}>Score</a>\r\n            \r\n        </li>\r\n        \r\n      </ul>\r\n    </nav>\r\n        <h1 className=\"titre\">Tremor watch interface</h1> \r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default Header;\r\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Footer.js",[],"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Navigation.js",[],"C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Home.js",["78","79","80","81","82"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport axios from 'axios'; \r\nimport Line from './Line.js';\r\n\r\nimport Footer from './Footer.js';\r\nimport { render } from 'react-dom';\r\n\r\nclass Home extends React.Component  {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    this.state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null,\r\n      variable1 : '',\r\n      tableau : [],\r\n      heure:[],\r\n      x:[],\r\n      y:[],\r\n      z:[],\r\n      score:[]\r\n    \r\n    }; \r\n    //this.state.variable1.set(\"9:01\",[0,1,2,3]);\r\n      //  this.state.variable1.forEach((val, key) =>{\r\n        //    console.log(key, val);\r\n        console.log(this.state.tableau);\r\n        \r\n        //})\r\n    }\r\n    \r\n    \r\n    showFile = () => {\r\n    this.v = [5, 6]\r\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n         var preview = document.getElementById('show-text');\r\n         var file = document.querySelector('input[type=file]').files[0];\r\n         var reader = new FileReader()\r\n\r\n         var textFile = /text.*/;\r\n                \r\n     if (file.type.match(textFile)) {\r\n            reader.onload = (event) => {\r\n               preview.innerHTML = event.target.result;\r\n                this.v=event.target.result\r\n                this.setState({variable1 : String(this.v)})\r\n                //this.setState({tableau:[...this.state.tableau,{heure:'tx',x:5,y:100,z:102,score:5}]})\r\n                            \r\n            }\r\n    \r\n         } else {\r\n            preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\r\n         }\r\n        \r\n        reader.readAsText(file);\r\n        \r\n        \r\n        \r\n        \r\n        \r\n   } else {\r\n      alert(\"Your browser is too old to support HTML5 File API\");\r\n   }\r\n        \r\n  }\r\n    \r\n\r\nshowKlicKlic = () =>{\r\n    \r\nconsole.log('tableau',this.state.tableau)\r\n    \r\n    let mot=this.state.variable1.split(' '&& '\\n')\r\n    \r\n    let tab = [...this.state.tableau];\r\n    let vheure=[...this.state.heure];\r\n    let vx = [...this.state.x]\r\n    let vy = [...this.state.y]\r\n    let vz = [...this.state.z]\r\n    let vscore = [...this.state.score]\r\n    \r\n    for(var i=1;i<mot.length;i++){ \r\n        \r\n        let str=mot[i]\r\n        console.log(typeof mot[i])\r\n        console.log(str.split(','))\r\n        let l =str.split(',')\r\n        console.log(l[0])\r\n        \r\n        if(i==1){\r\n            tab = [{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[l[0]]\r\n            vx=[l[1]];\r\n            vy=[l[2]];\r\n            vz=[l[3]];\r\n            vscore=[l[4]];\r\n            \r\n            \r\n        }\r\n        else{\r\n            tab = [...tab,{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[...vheure,l[0]]\r\n            vx=[...vx,l[1]];\r\n            vy=[...vy,l[2]];\r\n            vz=[...vz,l[3]];\r\n            vscore=[...vscore,l[4]];\r\n        }\r\n        \r\n      }          \r\n       this.setState({heure:vheure,x:vx,y:vy,z:vz, score:vscore,tableau:tab});\r\n       /*this.setState({x:vx});\r\n       this.setState({y:vy});\r\n       this.setState({z:vz});\r\n       this.setState({score:vscore});\r\n       this.setState({tableau:tab});*/\r\n}\r\n\r\n     \r\n    render() { \r\n        console.log(\"xxxx\",this.state.x)\r\n        console.log(\"score\",this.state.score)\r\n      return (\r\n         \r\n        <div>\r\n    \r\n          <h3>Upload file to plot the data !</h3> \r\n          <input type=\"file\" onChange={this.showFile.bind(this)} />\r\n          <button onClick={this.showKlicKlic.bind(this)}>Upload Data</button>\r\n          <div>\r\n                <h3 className=\"centrer\">Tremor graph</h3>\r\n                <Line title={this.state.title} datax={this.state.x} datay={this.state.y} dataz={this.state.z} labo={this.state.heure}/>\r\n          </div>      \r\n            <p>Données : </p>\r\n          <div id=\"show-text\"></div>\r\n          \r\n          <div>\r\n        \r\n          </div>\r\n        </div> \r\n\r\n      ); \r\n    } \r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Donut.js",["83","84","85"],"import \"./App.css\";\r\nimport React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport Cdonut from './Cdonut.js';\r\n\r\n\r\n\r\nclass Donut extends Component {\r\nconstructor(props) {\r\n        super(props);\r\n        \r\n    this.state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null,\r\n      variable1 : '',\r\n      tableau : [],\r\n      heure:[],\r\n      x:[],\r\n        minx:0,\r\n        maxx:0,\r\n      y:[],\r\n        miny:0,\r\n        maxy:0,\r\n      z:[],\r\n        minz:0,\r\n        maxz:0,\r\n      score:[],\r\n      moyennex:'',\r\n        moyenney:'',\r\n        moyennez:''\r\n        \r\n    \r\n    }; \r\n    //this.state.variable1.set(\"9:01\",[0,1,2,3]);\r\n      //  this.state.variable1.forEach((val, key) =>{\r\n        //    console.log(key, val);\r\n        console.log(this.state.tableau);\r\n        \r\n        //})\r\n    }\r\n    \r\n    \r\n    showFile = () => {\r\n    this.v = [5, 6]\r\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n         var preview = document.getElementById('show-text');\r\n         var file = document.querySelector('input[type=file]').files[0];\r\n         var reader = new FileReader()\r\n\r\n         var textFile = /text.*/;\r\n                \r\n     if (file.type.match(textFile)) {\r\n            reader.onload = (event) => {\r\n               preview.innerHTML = event.target.result;\r\n                this.v=event.target.result\r\n                this.setState({variable1 : String(this.v)})\r\n                //this.setState({tableau:[...this.state.tableau,{heure:'tx',x:5,y:100,z:102,score:5}]})\r\n                            \r\n            }\r\n    \r\n         } else {\r\n            preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\r\n         }\r\n        \r\n        reader.readAsText(file);\r\n        \r\n        \r\n        \r\n        \r\n        \r\n   } else {\r\n      alert(\"Your browser is too old to support HTML5 File API\");\r\n   }\r\n        \r\n  }\r\n    \r\n\r\nshowKlicKlic = () =>{\r\n    \r\nconsole.log('tableau',this.state.tableau)\r\n    \r\n    let mot=this.state.variable1.split(' '&& '\\n')\r\n    \r\n    let tab = [...this.state.tableau];\r\n    let vheure=[...this.state.heure];////variable pour les datas heure\r\n    let vx = [...this.state.x]//variable pour les datas en x\r\n    let vy = [...this.state.y]//variable pour les datas en x\r\n    let vz = [...this.state.z]//variable pour les datas en z\r\n    let vscore = [...this.state.score]\r\n    let vmoy = 0;//Moyenne des tremor en x\r\n    let vmoy1 = 0;//Moyenne des tremor en y\r\n    let vmoy2 = 0;//Moyenne des tremor en z\r\n    let minv=0;\r\n    let maxv=0;\r\n    let miny=0;\r\n    let maxy=0;\r\n    let minz=0;\r\n    let maxz=0;\r\n    \r\n    //Lecture et récupération des données du fichier texte\r\n    for(var i=1;i<mot.length;i++){ \r\n        \r\n        let str=mot[i]\r\n        console.log(typeof mot[i])\r\n        console.log(str.split(','))\r\n        let l =str.split(',')\r\n        console.log(l[0])\r\n        \r\n        if(i==1){\r\n            tab = [{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[l[0]]\r\n            vx=[l[1]];\r\n            vy=[l[2]];\r\n            vz=[l[3]];\r\n            vscore=[l[4]];\r\n            \r\n            \r\n        }\r\n        else{\r\n            tab = [...tab,{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[...vheure,l[0]]\r\n            vx=[...vx,l[1]];\r\n            vy=[...vy,l[2]];\r\n            vz=[...vz,l[3]];\r\n            vscore=[...vscore,l[4]];\r\n        }\r\n        \r\n      }\r\n    minv=vx[0];\r\n    maxv=vx[0];\r\n    miny=vy[0];\r\n    maxy=vy[0];\r\n    minz=vz[0];\r\n    maxz=vz[0];\r\n    \r\n    for(var i=0;i<=vx.length -1;i++){\r\n        \r\n        vmoy+=parseInt(vx[i]);\r\n        vmoy1+=parseInt(vy[i]);\r\n        vmoy2+=parseInt(vz[i]);\r\n        \r\n        if(minv>vx[i]){ minv=vx[i]; }\r\n        if(maxv<vx[i]){ maxv=vx[i];}\r\n        if(miny>vy[i]){ miny=vy[i]; }\r\n        if(maxy<vy[i]){ maxy=vy[i];}\r\n        if(minz>vz[i]){ minz=vz[i]; }\r\n        if(maxz<vz[i]){ maxz=vz[i];}\r\n        \r\n     console.log(\"vx:\", vx[i] )\r\n        console.log(\"i:\", i )   \r\n    }\r\n     \r\n   \r\n    vmoy=parseInt(vmoy/vx.length);\r\n    vmoy1=parseInt(vmoy1/vy.length);\r\n    vmoy2=parseInt(vmoy2/vz.length);\r\n    \r\n    console.log(\"moyennex:\", vmoy)\r\n    console.log(\"moyenney:\", vmoy1)\r\n    console.log(\"moyennez:\", vmoy2)\r\n       this.setState({heure:vheure,x:vx,y:vy,z:vz, score:vscore,tableau:tab,moyennex:vmoy,moyenney:vmoy1,moyennez:vmoy2, minx:minv,maxx:maxv, miny:miny,maxy:maxy,minz:minz,maxz:maxz});\r\n    \r\n       \r\n}\r\n\r\n  render() {\r\n    console.log(this.state.moyennex)\r\n      return (\r\n    \r\n        <div>\r\n    \r\n          <h3>Upload file to plot the data !</h3> \r\n          <input type=\"file\" onChange={this.showFile.bind(this)} />\r\n          <button class='lapin' onClick={this.showKlicKlic.bind(this)}>Upload Data</button>\r\n          <div>\r\n             <h3 className=\"centrer\">Pie Chart des tremblements</h3>\r\n            <div class='wrapper'>\r\n                <div class='one'>\r\n                <Cdonut moyennex={this.state.moyennex} moyenney={this.state.moyenney} moyennez={this.state.moyennez} labo={this.state.heure}/>\r\n                </div>\r\n                <div class='two'>\r\n                <h4>Valeurs:</h4>\r\n                    <div class='ha'>\r\n                        <div class='hehe'>\r\n                        <h5 >Tremor X</h5>\r\n                            <p>Moyenne : {this.state.moyennex}</p>\r\n                            <p>Min : {this.state.minx}</p>\r\n                            <p>Max : {this.state.maxx}</p>\r\n                        </div>\r\n                        <div class='hehehe'>\r\n                        <h5 >Tremor Y</h5>\r\n                            <p>Moyenne : {this.state.moyenney}</p>\r\n                            <p>Min : {this.state.miny}</p>\r\n                            <p>Max : {this.state.maxy}</p>\r\n                        </div>\r\n                        <div class='hehehehe'>\r\n                        <h5 >Tremor Z</h5>\r\n                            <p>Moyenne : {this.state.moyennez}</p>\r\n                            <p>Min : {this.state.minz}</p>\r\n                            <p>Max : {this.state.maxz}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n          </div>      \r\n            <p>Données : </p>\r\n          <div id=\"show-text\"></div>\r\n          \r\n          <div>\r\n        \r\n          </div>\r\n        </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default Donut;\r\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Score.js",["86","87","88","89","90","91","92","93","94"],"import \"./App.css\";\r\nimport React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport Cdonut from './Cdonut.js';\r\nimport Line from './Line.js'\r\nimport Cscore from './CScore.js'\r\n\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n\r\nclass Donut extends Component {\r\nconstructor(props) {\r\n        super(props);\r\n        \r\n    this.state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null,\r\n      variable1 : '',\r\n      tableau : [],\r\n      heure:[],\r\n      x:[],\r\n      y:[],\r\n      z:[],\r\n      score:[],\r\n      moyenne1:'',\r\n        moyenne2:'',\r\n        moyenne3:'',\r\n        moyenne4:'',\r\n        moyenne5:''\r\n        \r\n    \r\n    }; \r\n    //this.state.variable1.set(\"9:01\",[0,1,2,3]);\r\n      //  this.state.variable1.forEach((val, key) =>{\r\n        //    console.log(key, val);\r\n        console.log(this.state.tableau);\r\n        \r\n        //})\r\n    }\r\n    \r\n    \r\n    showFile = () => {\r\n    this.v = [5, 6]\r\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n         var preview = document.getElementById('show-text');\r\n         var file = document.querySelector('input[type=file]').files[0];\r\n         var reader = new FileReader()\r\n\r\n         var textFile = /text.*/;\r\n                \r\n     if (file.type.match(textFile)) {\r\n            reader.onload = (event) => {\r\n               preview.innerHTML = event.target.result;\r\n                this.v=event.target.result\r\n                this.setState({variable1 : String(this.v)})\r\n                //this.setState({tableau:[...this.state.tableau,{heure:'tx',x:5,y:100,z:102,score:5}]})\r\n                            \r\n            }\r\n    \r\n         } else {\r\n            preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\r\n         }\r\n        \r\n        reader.readAsText(file);\r\n        \r\n        \r\n        \r\n        \r\n        \r\n   } else {\r\n      alert(\"Your browser is too old to support HTML5 File API\");\r\n   }\r\n        \r\n  }\r\n    \r\n\r\nshowKlicKlic = () =>{\r\n    \r\nconsole.log('tableau',this.state.tableau)\r\n    \r\n    let mot=this.state.variable1.split(' '&& '\\n')\r\n    \r\n    let tab = [...this.state.tableau];\r\n    let vheure=[...this.state.heure];////variable pour les datas heure\r\n    let vx = [...this.state.x]//variable pour les datas en x\r\n    let vy = [...this.state.y]//variable pour les datas en x\r\n    let vz = [...this.state.z]//variable pour les datas en z\r\n    let vscore = [...this.state.score]\r\n    let vmoy = 0;\r\n    let vmoy1 = 0;\r\n    let vmoy2 = 0;\r\n    let vmoy3 = 0;\r\n    let vmoy4 = 0;\r\n    \r\n    \r\n    //Lecture et récupération des données du fichier texte\r\n    for(var i=1;i<mot.length;i++){ \r\n        \r\n        let str=mot[i]\r\n        console.log(typeof mot[i])\r\n        console.log(str.split(','))\r\n        let l =str.split(',')\r\n        console.log(l[0])\r\n        \r\n        if(i==1){\r\n            tab = [{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[l[0]]\r\n            vx=[l[1]];\r\n            vy=[l[2]];\r\n            vz=[l[3]];\r\n            vscore=[l[4]];\r\n            \r\n            \r\n        }\r\n        else{\r\n            tab = [...tab,{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[...vheure,l[0]]\r\n            vx=[...vx,l[1]];\r\n            vy=[...vy,l[2]];\r\n            vz=[...vz,l[3]];\r\n            vscore=[...vscore,l[4]];\r\n        }\r\n        \r\n      }\r\n    \r\n    \r\n    for(var i=0;i<vscore.length;i++){\r\n       if(vscore[i]==='0'){vmoy+=1;}\r\n        \r\n        if(parseInt(vscore[i])==1){vmoy1+=1;}\r\n        if(parseInt(vscore[i])==2){vmoy2+=1;}\r\n        if(parseInt(vscore[i])==3){vmoy3=vmoy3+1;}\r\n        if(parseInt(vscore[i])==4){vmoy4+=1;}\r\n        \r\n        \r\n        \r\n    }\r\n    console.log(vscore)\r\n    console.log(\"cpt1:\", vmoy)\r\n    console.log(\"cpt2:\", vmoy1)\r\n    console.log(\"cpt3:\", vmoy2)\r\n    console.log(\"cpt4:\", vmoy3)\r\n    console.log(\"cpt5:\", vmoy4)\r\n       this.setState({heure:vheure,x:vx,y:vy,z:vz, score:vscore,tableau:tab,moyenne1:vmoy,moyenne2:vmoy1,moyenne3:vmoy2,moyenne4:vmoy3,moyenne5:vmoy4});\r\n    \r\n       \r\n}\r\n\r\n  render() {\r\n    return (\r\n    \r\n        <div>\r\n    \r\n          <h3>Upload file to plot the data !</h3> \r\n          <input type=\"file\" onChange={this.showFile.bind(this)} />\r\n          <button onClick={this.showKlicKlic.bind(this)}>Upload Data</button>\r\n              <div>\r\n                <h3 className=\"centrer\">Line chart du score</h3>\r\n                <Cscore score={this.state.score} labo={this.state.heure}/>\r\n\r\n              </div>\r\n\r\n                <div>\r\n                    <h3 className=\"centrer\">Pie chart du score</h3>\r\n\r\n<div class='wrapper'>\r\n    <div class=\"one\">\r\n                    <div style={{padding:'2em',align:'center',width:'50%',height:'50%'}}>\r\n                <h4 style={{padding:'1em'}}>Occurence des scores</h4>\r\n        <p>Légende :</p>\r\n        <div class='hoho'>\r\n            \r\n                    <div class='hi, box_col1'>1</div>\r\n                    <div class='hihi, box_col2'>2</div>\r\n                    <div class='hihihi, box_col3'>3</div>\r\n                    <div class='hihihihi, box_col4'>4</div>\r\n                    <div class='hihihihihi, box_col5'>5</div>\r\n                </div>\r\n                <PieChart  data={[\r\n            { title: '1', value: this.state.moyenne1, color: '#E38627' },\r\n            { title: '2', value:  this.state.moyenne2, color: '#C13C37' },\r\n            { title: '3', value:  this.state.moyenne3, color: '#6A2135' },\r\n            { title: '4', value:  this.state.moyenne4, color: '#256698' },\r\n            { title: '5', value:  this.state.moyenne5, color: '#155508' },\r\n                                 \r\n          ]} label={(props) => { return props.dataEntry.value}}  />\r\n        \r\n        \r\n            </div>\r\n                                 </div>\r\n                <div class='two'>\r\n                <h4>Valeurs:</h4>\r\n                    <div class='ha'>\r\n                        <div class='hehe'>\r\n                        <h5 >Score 1: {this.state.moyenne1}</h5>\r\n                        <h5>Score 4: {this.state.moyenne4}</h5>\r\n                            \r\n                        </div>\r\n                        <div class='hehehe'>\r\n                        <h5 >Score 2: {this.state.moyenne2}</h5>\r\n                        <h5 >Score 5: {this.state.moyenne5}</h5>    \r\n                        </div>\r\n                        <div class='hehehehe'>\r\n                        <h5 >Score 3: {this.state.moyenne3}</h5>\r\n                            \r\n                        </div>\r\n                    </div>\r\n          </div>\r\n                </div>\r\n            </div>\r\n            <p>Données : </p>\r\n          <div id=\"show-text\"></div>\r\n          \r\n          <div>\r\n        \r\n          </div>\r\n        </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default Donut;\r\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Courbi.js",["95","96"],"import './App.css';\r\nimport React from 'react';\r\nimport Line from './Line.js';\r\nimport { render } from 'react-dom';\r\n\r\nclass Courbi extends React.Component  {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    this.state = { \r\n  \r\n      // Initially, no file is selected \r\n      selectedFile: null,\r\n      variable1 : '',\r\n      tableau : [],\r\n      heure:[],\r\n      x:[],\r\n      y:[],\r\n      z:[],\r\n      score:[]\r\n    \r\n    }; \r\n    //this.state.variable1.set(\"9:01\",[0,1,2,3]);\r\n      //  this.state.variable1.forEach((val, key) =>{\r\n        //    console.log(key, val);\r\n        console.log(this.state.tableau);\r\n        \r\n        //})\r\n    }\r\n    \r\n    \r\n    showFile = () => {\r\n    this.v = [5, 6]\r\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n         var preview = document.getElementById('show-text');\r\n         var file = document.querySelector('input[type=file]').files[0];\r\n         var reader = new FileReader()\r\n\r\n         var textFile = /text.*/;\r\n                \r\n     if (file.type.match(textFile)) {\r\n            reader.onload = (event) => {\r\n               preview.innerHTML = event.target.result;\r\n                this.v=event.target.result\r\n                this.setState({variable1 : String(this.v)})\r\n                //this.setState({tableau:[...this.state.tableau,{heure:'tx',x:5,y:100,z:102,score:5}]})\r\n                            \r\n            }\r\n    \r\n         } else {\r\n            preview.innerHTML = \"<span class='error'>It doesn't seem to be a text file!</span>\";\r\n         }\r\n        \r\n        reader.readAsText(file);\r\n        \r\n        \r\n        \r\n        \r\n        \r\n   } else {\r\n      alert(\"Your browser is too old to support HTML5 File API\");\r\n   }\r\n        \r\n  }\r\n    \r\n\r\nshowKlicKlic = () =>{\r\n    \r\nconsole.log('tableau',this.state.tableau)\r\n    \r\n    let mot=this.state.variable1.split(' '&& '\\n')\r\n    \r\n    let tab = [...this.state.tableau];\r\n    let vheure=[...this.state.heure];\r\n    let vx = [...this.state.x]\r\n    let vy = [...this.state.y]\r\n    let vz = [...this.state.z]\r\n    let vscore = [...this.state.score]\r\n    \r\n    for(var i=1;i<mot.length;i++){ \r\n        \r\n        let str=mot[i]\r\n        console.log(typeof mot[i])\r\n        console.log(str.split(','))\r\n        let l =str.split(',')\r\n        console.log(l[0])\r\n        \r\n        if(i==1){\r\n            tab = [{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[l[0]]\r\n            vx=[l[1]];\r\n            vy=[l[2]];\r\n            vz=[l[3]];\r\n            vscore=[l[4]];\r\n            \r\n            \r\n        }\r\n        else{\r\n            tab = [...tab,{heure:l[0],x:l[1],y:l[2],z:l[3],score:l[4]}];\r\n            vheure=[...vheure,l[0]]\r\n            vx=[...vx,l[1]];\r\n            vy=[...vy,l[2]];\r\n            vz=[...vz,l[3]];\r\n            vscore=[...vscore,l[4]];\r\n        }\r\n        \r\n      }          \r\n       this.setState({heure:vheure,x:vx,y:vy,z:vz, score:vscore,tableau:tab});\r\n       /*this.setState({x:vx});\r\n       this.setState({y:vy});\r\n       this.setState({z:vz});\r\n       this.setState({score:vscore});\r\n       this.setState({tableau:tab});*/\r\n}\r\n\r\nact = () =>{\r\n    \r\n    window.location.reload();\r\n}\r\n     \r\n    render() { \r\n        \r\n      return (\r\n         \r\n        <div>\r\n    \r\n          <h3>Upload file to plot the data !</h3> \r\n          <input type=\"file\" onChange={this.showFile.bind(this)} />\r\n          <button onClick={this.showKlicKlic.bind(this)}>Upload Data</button>\r\n        \r\n          <div>\r\n                <h3 className=\"centrer\">Tremor X</h3>\r\n                <Line datax={this.state.x} labo={this.state.heure}/>\r\n          </div>\r\n          <div>\r\n                <h3 className=\"centrer\">Tremor Y</h3>\r\n                <Line datay={this.state.y} labo={this.state.heure}/>\r\n          </div>  \r\n          <div>\r\n                <h3 className=\"centrer\">Tremor Z</h3>\r\n                <Line dataz={this.state.z} labo={this.state.heure}/>\r\n          </div>  \r\n<div>\r\n                <h3 className=\"centrer\">Score</h3>\r\n                <Line score={this.state.score} labo={this.state.heure}/>\r\n          </div>  \r\n\r\n\r\n            <p>Données : </p>\r\n          <div id=\"show-text\"></div>\r\n          \r\n          <div>\r\n        \r\n          </div>\r\n        </div> \r\n\r\n      ); \r\n    } \r\n}\r\n\r\nexport default Courbi;\r\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\Cdonut.js",["97","98"],"import \"./App.css\";\r\nimport React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nclass Cdonut extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n   \r\n    }\r\n  }\r\n    \r\n\r\nactu = () =>{\r\n    let label = this.props.labo;\r\n    let data = this.state.chartData;\r\n    \r\n    \r\n    /*data.datasets.[0].data.[0]=this.props.moyennex;\r\n    data.datasets.[0].data.[1]=this.props.moyenney;\r\n    data.datasets.[0].data.[2]=this.props.moyennez;*/\r\n    \r\n    this.setState({data})\r\n    \r\n}\r\n\r\n  render() {\r\n      \r\n    return (\r\n        <div>\r\n            <div style={{padding:'0.5em'}}>\r\n                     \r\n            </div>\r\n            <div style={{padding:'2em',align:'center',width:'50%',height:'50%'}}>\r\n                <h4 style={{padding:'1em'}}>Moyennes des tremblements</h4>\r\n<p>Légende :</p>\r\n        <div class='haha'>\r\n            \r\n                    <div class='hehe, box_col1'>X</div>\r\n                    <div class='hehehe, box_col2'>Y</div>\r\n                    <div class='hehehehe, box_col3'>Z</div>\r\n                </div>\r\n                <PieChart  data={[\r\n            { title: 'X', value: this.props.moyennex, color: '#E38627' },\r\n            { title: 'Y', value:  this.props.moyenney, color: '#C13C37' },\r\n            { title: 'Z', value:  this.props.moyennez, color: '#6A2135' },\r\n          ]} label={(props) => { return props.dataEntry.value}}  />\r\n        \r\n        \r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cdonut;\r\n","C:\\Users\\guifl\\Desktop\\Ing5\\PFE\\tremor-watch\\src\\CScore.js",["99"],"import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as zoom from 'chartjs-plugin-zoom';\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nclass Cscore extends React.Component{\r\n    state = {\r\n        lab:[],\r\n        data : {\r\n  labels: ['9:15', '9:20', '9:30', '9:35', '9:40', '9:45', '9:50','9:55', '10:00', '10:05', '10:10', '10:15', '10:20', '10:25'],\r\n  datasets: [\r\n   {\r\n      label: 'Score',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,12,0,0.4)',\r\n      borderColor: 'rgba(75,12,0,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,12,0,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,12,0,1)',\r\n      pointHoverBorderColor: 'rgba(220,20,0,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: []\r\n    }\r\n  ]\r\n},options: {\r\n        maintainAspectRatio: true,\r\n        responsive: true,\r\n        legend: {\r\n            position: 'top'\r\n        },scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:false\r\n                }\r\n            }]\r\n        },\r\n        plugins: {\r\n            zoom: {\r\n                // Container for pan options\r\n                pan: {\r\n                    // Boolean to enable panning\r\n                    enabled: true,\r\n\r\n                    // Panning directions. Remove the appropriate direction to disable \r\n                    // Eg. 'y' would only allow panning in the y direction\r\n                    mode: 'x',\r\n                    speed: 10,\r\n                threshold: 10\r\n                },\r\n\r\n                // Container for zoom options\r\n                zoom: {\r\n                    // Boolean to enable zooming\r\n                    enabled: true,\r\n\r\n                    // Zooming directions. Remove the appropriate direction to disable \r\n                    // Eg. 'y' would only allow zooming in the y direction\r\n                    drag: false,\r\n        mode: \"x\",\r\n                }\r\n            }\r\n        }\r\n  }\r\n    }\r\n    componentDidMount() {\r\n        \r\n  }\r\n\r\nactu = () =>{\r\n    let label = this.props.labo;\r\n    let data = this.state.data;\r\n    let score = this.props.score;\r\n    \r\n    data.datasets.[0].data=score;\r\n    \r\n    data.labels=label;\r\n    this.setState({data})\r\n    \r\n}\r\n    \r\n    render(){\r\n        \r\n        return(\r\n        \r\n        <div>\r\n        <div style={{padding:'0.5em'}}>\r\n            <button  onClick={this.actu}>Afficher les données</button>      \r\n        </div>\r\n            \r\n      <div style={{width:'85%',height:'85%'}}>\r\n            \r\n        <Line  data={this.state.data}/>\r\n    </div>\r\n        \r\n    </div>\r\n        \r\n        \r\n        \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Cscore;",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":12},{"ruleId":"106","severity":1,"message":"111","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":16},{"ruleId":"106","severity":1,"message":"112","line":16,"column":8,"nodeType":"108","messageId":"109","endLine":16,"endColumn":18},{"ruleId":"106","severity":1,"message":"113","line":3,"column":13,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"106","severity":1,"message":"114","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":11},{"ruleId":"106","severity":1,"message":"115","line":4,"column":9,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":12},{"ruleId":"106","severity":1,"message":"116","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":13},{"ruleId":"106","severity":1,"message":"117","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":93,"column":13,"nodeType":"120","messageId":"121","endLine":93,"endColumn":15},{"ruleId":"106","severity":1,"message":"111","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":110,"column":13,"nodeType":"120","messageId":"121","endLine":110,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":137,"column":13,"nodeType":"108","messageId":"124","endLine":137,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"125","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":14},{"ruleId":"106","severity":1,"message":"110","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":106,"column":13,"nodeType":"120","messageId":"121","endLine":106,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":128,"column":13,"nodeType":"108","messageId":"124","endLine":128,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":131,"column":31,"nodeType":"120","messageId":"121","endLine":131,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":132,"column":31,"nodeType":"120","messageId":"121","endLine":132,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":133,"column":31,"nodeType":"120","messageId":"121","endLine":133,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":134,"column":31,"nodeType":"120","messageId":"121","endLine":134,"endColumn":33},{"ruleId":"106","severity":1,"message":"111","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":89,"column":13,"nodeType":"120","messageId":"121","endLine":89,"endColumn":15},{"ruleId":"106","severity":1,"message":"111","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"126","line":16,"column":9,"nodeType":"108","messageId":"109","endLine":16,"endColumn":14},{"ruleId":"106","severity":1,"message":"113","line":3,"column":13,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"102","replacedBy":"127"},{"ruleId":"104","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","'render' is defined but never used.","'Navigation' is defined but never used.","'zoom' is defined but never used.","'App' is defined but never used.","'NavLink' is defined but never used.","'axios' is defined but never used.","'Footer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'Cdonut' is defined but never used.","'label' is assigned a value but never used.",["129"],["130"],"no-global-assign","no-unsafe-negation"]